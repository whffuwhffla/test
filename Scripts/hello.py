import numpy as np
import scipy.linalg as linalg
import matplotlib.pyplot as plt
"""
베이지안 정리이란 두 확률 변수의 사전확률과 사후 확률 사이의 관계를 나타내는 정리 

"""


"""
필터는 출력으로써 더 정확한 추정값을 얻기 위해 입력의 노이즈(불확실성)을 제거하는 것입니다.
베이지안 필터는 베이지안 통계가 적용된 필터입니다. 로봇은 0에서 9까지의 복도에 존재하고 움직입니다.
복도는 원형 복도 입니다. 9 다음에 0 입니다. 그리고 조명은 1, 3, 7번 위치에만 존재합니다.

"""

# 초기에는 로봇의 위치에 대한 정보가 없습니다. 그래서 로봇은 어느 위치에서나 존재 할 수 있으므로 모든 위치에 같은 확률을 할당합니다. 
belief = [0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1]

# 조명의 위치에 따른 확률
light = [0, 1, 0, 1, 0, 0, 0, 1, 0, 0]

# correct step : 센서 데이터를 사용하여 센서 데이터와 환경의 지도에 기반하여 추정된 상태를 수정 하는 단계 / 측정과 관측은 같은 의미
"""
처음에 로봇의 위치에 대한 정보가 없으므로 belief를 모두 같게 설정 하였습니다. belief = [0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1]
로봇이 빛을 감지하면 로봇의 위치에 대한 belief가 다음과 같이 변화 합니다. belief = [0, 0.333, 0, 0.333, 0, 0, 0, 0.333, 0, 0]
왜냐하면 우리는 지도에 조명이 3개 뿐이라는 것을 알고 조명이 1, 3, 7번 위치에 있다는 것을 알기 때문입니다. light = [0, 1, 0, 1, 0, 0, 0, 1, 0, 0]
하지만 로봇은 1, 3, 7번 위치 중 어디에 있는지는 모르고 정확한 정보가 없으므로 모든 조명에 같은 확률로 할당을 합니다. 그래서 belief가 belief = [0, 0.333, 0, 0.333, 0, 0, 0, 0.333, 0, 0]와 같이 된 것입니다.

"""

"""
하지만 correct step 즉 센서를 이용하는 측정 과정은 정확하지 않습니다. 왜냐하면 센서들은 완벽하지 않아 노이즈가 섞인 부정확한 데이터를 주기 때문입니다.
센서들의 감지 거리 및 해상도 분해능 등은 제한적이고 여러 외부 요소(환경)들에 의해 노이즈가 생셔 잘 측정이 안될 수도 있기 때문입니다.

"""

# 바 그래프 설정
x = np.arange(10)
grid = ['0', '1', '2', '3', '4', '5', '6', '7', '8', '9']
plt.bar(x, belief,width=0.4)
plt.xticks(x, grid)

# x, y축 라벨 표시 및 y축 리미트 설정 (왜 1이냐 확률 스케일 상 1이기 때문)
plt.xlabel('move grid')
plt.ylabel('belif')
plt.ylim([0, 1])

# vscode에서 그래프 플롯할때 필수적인 거임
plt.show()


#x = np.array([[1, 2],
#             [3, 4]])
#np.linspace(0, 2, 20)
#np.arange(0, 2, 0.1)
#print('zeros\n', np.zeros(7))
#print('\nzeros(3x2)\n', np.zeros((3, 2)))
#print('\neye\n', np.eye(3))
#print('transpose\n', x.T)
#print('\nNumPy ninverse\n', np.linalg.inv(x))
#print('\nSciPy inverse\n', linalg.inv(x))
